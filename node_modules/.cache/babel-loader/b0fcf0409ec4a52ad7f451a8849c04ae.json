{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karol\\\\OneDrive\\\\Pulpit\\\\Neoteric\\\\ReactUdemy\\\\PracticeFirst\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AddUser from \"./components/Users/AddUser\";\nimport UsersList from \"./components/Users/UsersList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [usersList, setUsersList] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddUser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UsersList, {\n      users: usersList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"rCuhwovjWVqRB5NhAf7v+2So/Rg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AddUser","UsersList","App","usersList","setUsersList"],"sources":["C:/Users/karol/OneDrive/Pulpit/Neoteric/ReactUdemy/PracticeFirst/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport AddUser from \"./components/Users/AddUser\";\nimport UsersList from \"./components/Users/UsersList\";\n\n\nfunction App() {\n    const [usersList, setUsersList] = useState([]);\n    return (\n        <div>\n            <AddUser/>\n            <UsersList users={usersList}/>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACX,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;EACA,oBACI;IAAA,wBACI,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,SAAD;MAAW,KAAK,EAAEI;IAAlB;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH;;GARQD,G;;KAAAA,G;AAUT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}